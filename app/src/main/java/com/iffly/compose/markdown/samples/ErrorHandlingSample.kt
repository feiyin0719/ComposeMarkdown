package com.iffly.compose.markdown.samples

import androidx.compose.foundation.layout.Column
import androidx.compose.foundation.layout.PaddingValues
import androidx.compose.foundation.layout.Spacer
import androidx.compose.foundation.layout.fillMaxSize
import androidx.compose.foundation.layout.fillMaxWidth
import androidx.compose.foundation.layout.height
import androidx.compose.foundation.layout.padding
import androidx.compose.foundation.rememberScrollState
import androidx.compose.foundation.verticalScroll
import androidx.compose.material3.Card
import androidx.compose.material3.CardDefaults
import androidx.compose.material3.MaterialTheme
import androidx.compose.material3.Text
import androidx.compose.runtime.Composable
import androidx.compose.ui.Modifier
import androidx.compose.ui.graphics.Color
import androidx.compose.ui.text.font.FontWeight
import androidx.compose.ui.unit.dp
import com.iffly.compose.markdown.MarkdownView
import com.iffly.compose.markdown.config.MarkdownRenderConfig

@Composable
fun ErrorHandlingExample(paddingValues: PaddingValues) {
    // ÊïÖÊÑèÂàõÂª∫‰∏Ä‰∏™ÂèØËÉΩÂá∫ÈîôÁöÑÂú∫ÊôØ
    val invalidContent = """
        # ÈîôËØØÂ§ÑÁêÜÁ§∫‰æã
        
        Ëøô‰∏™Á§∫‰æãÂ±ïÁ§∫Ê≠£Â∏∏ÂÜÖÂÆπÂíåÈîôËØØÂ§ÑÁêÜÔºö
        
        ## Ê≠£Â∏∏ÂÜÖÂÆπ
        ËøôÈÉ®ÂàÜÂÜÖÂÆπÂ∫îËØ•Ê≠£Â∏∏ÊòæÁ§∫„ÄÇ
        
        **Á≤ó‰Ωì** Âíå *Êñú‰Ωì* ÊñáÊú¨„ÄÇ
        
        ## ÊΩúÂú®ÈóÆÈ¢ò
        Âú®ÂÆûÈôÖÂ∫îÁî®‰∏≠ÔºåÂèØËÉΩÈÅáÂà∞Ôºö
        - ÁΩëÁªúËØ∑Ê±ÇÂ§±Ë¥•
        - Êñá‰ª∂ËØªÂèñÈîôËØØ  
        - Ëß£ÊûêÂºÇÂ∏∏
        
        Â∫ìÊèê‰æõ‰∫Ü‰ºòÈõÖÁöÑÈîôËØØÂ§ÑÁêÜÊú∫Âà∂„ÄÇ
    """.trimIndent()

    Column(
        modifier = Modifier
            .fillMaxSize()
            .padding(paddingValues)
            .verticalScroll(rememberScrollState())
    ) {
        Card(
            modifier = Modifier
                .fillMaxWidth()
                .padding(16.dp),
            colors = CardDefaults.cardColors(containerColor = Color.Blue.copy(alpha = 0.1f))
        ) {
            Text(
                text = "üí° ÊèêÁ§∫ÔºöËøô‰∏™Á§∫‰æãÂ±ïÁ§∫‰∫ÜÈîôËØØÂ§ÑÁêÜÊú∫Âà∂",
                modifier = Modifier.padding(16.dp),
                color = Color.Blue
            )
        }

        MarkdownView(
            content = invalidContent,
            markdownRenderConfig = MarkdownRenderConfig.Builder().build(),
            modifier = Modifier.padding(16.dp),
            onError = { throwable ->
                Card(
                    modifier = Modifier.fillMaxWidth(),
                    colors = CardDefaults.cardColors(containerColor = Color.Red.copy(alpha = 0.1f))
                ) {
                    Column(
                        modifier = Modifier.padding(16.dp)
                    ) {
                        Text(
                            text = "‚ö†Ô∏è Markdown Ëß£ÊûêÂ§±Ë¥•",
                            color = Color.Red,
                            fontWeight = FontWeight.Bold
                        )
                        Spacer(modifier = Modifier.height(8.dp))
                        Text(
                            text = "ÈîôËØØ‰ø°ÊÅØ: ${throwable.message}",
                            color = Color.Red,
                            style = MaterialTheme.typography.bodySmall
                        )
                    }
                }
            }
        )
    }
}
